{
  "workflow_id": "contrib.simple_dq_check",
  "workflow_name": "Simple Dq Check Workflow",
  "version": "1.0.0",
  "description": "A basic workflow template for simple_dq_check",
  "workflow_type": "analysis",
  "workflow_category": "data_analysis",
  "source": "contrib",
  "maintainer": "community",
  "stability": "experimental",
  "complexity_level": "beginner",
  "estimated_duration": "2-3 minutes",
  "agent": "FlowPilot_simpledqcheck",
  "last_updated": "2025-09-04",
  "documentation_url": "./README.md",
  "splunk_versions": [
    "8.0+",
    "9.0+"
  ],
  "required_permissions": [
    "search"
  ],
  "prerequisites": [
    "splunk_mcp_server",
    "basic_splunk_access"
  ],
  "business_value": "Provides basic analysis capabilities",
  "use_cases": [
    "Basic data analysis",
    "System monitoring"
  ],
  "success_metrics": [],
  "target_audience": [
    "splunk_user"
  ],
  "data_requirements": {
    "minimum_events": 100,
    "required_sourcetypes": [],
    "optional_fields": [
      "host",
      "source",
      "index"
    ],
    "data_types": [
      "Analysis"
    ]
  },
  "workflow_instructions": {
    "specialization": "ANALYSIS SPECIALIZATION",
    "focus_areas": [
      "Focus on analysis analysis",
      "Execute searches systematically and thoroughly",
      "Provide clear insights and actionable recommendations"
    ],
    "execution_style": "sequential",
    "domain": "analysis"
  },
  "agent_dependencies": {
    "splunk_mcp": {
      "agent_id": "splunk_mcp",
      "description": "Splunk operations and search execution specialist",
      "required": true,
      "capabilities": [
        "search_execution",
        "system_information",
        "rest_api_access"
      ],
      "integration_points": [
        "search_workflow",
        "data_retrieval"
      ]
    },
    "result_synthesizer": {
      "agent_id": "result_synthesizer",
      "description": "Result analysis and synthesis specialist",
      "required": true,
      "capabilities": [
        "result_analysis",
        "insight_generation",
        "report_synthesis"
      ],
      "integration_points": [
        "result_processing",
        "final_synthesis"
      ]
    }
  },
  "core_phases": {
    "main_analysis": {
      "name": "Main Analysis",
      "description": "Simple Dq Check Workflow - Primary analysis phase",
      "mandatory": true,
      "parallel": false,
      "max_parallel": 1,
      "tasks": [
        {
          "task_id": "basic_check",
          "title": "Basic Check",
          "description": "Basic data check",
          "goal": "Execute basic_check search",
          "tool": "run_oneshot_search",
          "search_query": "search earliest=-24h | head 10 | table _time, index, sourcetype",
          "parameters": {
            "earliest_time": "-24h@h",
            "latest_time": "now"
          },
          "timeout_sec": 300,
          "expected_output": "Recent events sample",
          "analysis_focus": [
            "Basic data check"
          ]
        }
      ],
      "success_criteria": [
        "All searches completed successfully",
        "Results available for analysis",
        "No critical errors encountered"
      ]
    }
  },
  "execution_flow": {
    "phase_order": [
      "main_analysis"
    ],
    "error_handling": {
      "continue_on_task_failure": true,
      "max_failed_tasks_per_phase": 3,
      "retry_failed_tasks": true,
      "max_retries": 2
    },
    "performance_targets": {
      "max_total_execution_time": 600,
      "max_phase_execution_time": 300,
      "parallel_execution_timeout": 180
    },
    "adaptive_behavior": {
      "skip_slow_tasks": false,
      "prioritize_critical_checks": true,
      "dynamic_timeout_adjustment": true
    }
  },
  "output_structure": {
    "health_status": {
      "overall_status": "string",
      "component_status": "object",
      "critical_alerts": "array",
      "performance_metrics": "object",
      "recommendations": "array"
    },
    "execution_metadata": {
      "total_execution_time": "number",
      "checks_completed": "number",
      "checks_failed": "number",
      "timestamp": "string"
    }
  }
}